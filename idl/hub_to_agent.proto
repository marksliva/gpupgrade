syntax = "proto3";

package idl;

import "cli_to_hub.proto";

service Agent {
  rpc CheckDiskSpace (CheckSegmentDiskSpaceRequest) returns (CheckDiskSpaceReply) {}
  rpc UpgradePrimaries (UpgradePrimariesRequest) returns (UpgradePrimariesReply) {}
  rpc CreateSegmentDataDirectories (CreateSegmentDataDirRequest) returns (CreateSegmentDataDirReply) {}
  rpc RenameDirectories (RenameDirectoriesRequest) returns (RenameDirectoriesReply) {}
  rpc StopAgent (StopAgentRequest) returns (StopAgentReply) {}
  rpc UpdateRecoveryConfs(UpdateRecoveryConfsRequest) returns (UpdateRecoveryConfsReply) {}
}

message UpgradePrimariesRequest {
    string SourceBinDir = 1;
    string TargetBinDir = 2;
    string TargetVersion = 3;
    repeated DataDirPair DataDirPairs = 4;
    bool CheckOnly = 5;
    bool UseLinkMode = 6;
    string MasterBackupDir = 7;
}

message DataDirPair {
    string SourceDataDir = 1;
    string TargetDataDir = 2;
    int32  SourcePort    = 3;
    int32  TargetPort    = 4;
    int32  Content    = 5;
    int32  DBID       = 6;
}

message UpgradePrimariesReply {}

message CreateSegmentDataDirRequest {
    repeated string datadirs = 1;
}

message CreateSegmentDataDirReply {}

message RenamePair {
  string Src = 1;
  string Dst = 2;
}

message RenameDirectoriesRequest {
  repeated RenamePair Pairs = 1;
}

message RenameDirectoriesReply {}

message StopAgentRequest {}
message StopAgentReply {}

message CheckSegmentDiskSpaceRequest {
    CheckDiskSpaceRequest request = 1;
    repeated string datadirs = 2;
}

message UpdateRecoveryConfsRequest {
    repeated RecoveryConfInfo RecoveryConfInfos = 1;
}

message UpdateRecoveryConfsReply {}

message RecoveryConfInfo {
    int32  TargetPrimaryPort   = 1;
    int32  SourcePrimaryPort   = 2;
    string TargetMirrorDataDir = 3;
}
